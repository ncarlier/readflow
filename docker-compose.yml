version: "3"

services:
  ########################################
  # PostgreSQL
  ########################################
  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-readflow}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - internal
    volumes:
      - db-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  #######################################
  # Imaginary: Image proxy
  #######################################
  imaginary:
    image: h2non/imaginary:latest
    command: -enable-url-source -http-cache-ttl 172800
    environment:
      - MALLOC_ARENA_MAX=2
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    restart: always
    networks:
      - internal
    labels:
      - "traefik.enable=false"

  ########################################
  # API
  ########################################
  api:
    build: .
    image: "ncarlier/readflow:latest"
    restart: always
    depends_on:
      - db
    networks:
      - web
      - internal
    environment:
      - READFLOW_DB=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB:-readflow}?sslmode=disable
      - READFLOW_LISTEN_METRICS=:9090
      - READFLOW_IMAGE_PROXY_URL=http://imaginary:9000
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:api.${FQDN}"
      - "traefik.docker.network=${GW_NETWORK_NAME}"

#  ########################################
#  # Webapp
#  ########################################
#  app:
#    build: ./ui/
#    image: "ncarlier/readflow-app:latest"
#    restart: always
#    networks:
#      - web
#      - internal
#    labels:
#      - "traefik.port=80"
#      - "traefik.frontend.rule=Host:${FQDN}"
#      - "traefik.docker.network=${GW_NETWORK_NAME}"

networks:
  web:
    external:
      name: "${GW_NETWORK_NAME}"
  internal:
    external: false

volumes:
  db-data:
