version: "3"

services:
  #######################################
  # Reverse proxy (Traefik)
  #######################################
  traefik:
    image: traefik:2.1
    command: >
      --providers.docker=true
      --api.dashboard=true
      --api.insecure=true
      --log.level=INFO
      --entryPoints.web.address=:80
    restart: always
    ports:
      - "${PORT:-3000}:80"
      - "${RPROXY_PORT:-8080}:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - traefik.enable=false

  ########################################
  # PostgreSQL
  ########################################
  db:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-readflow}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - db-data:/var/lib/postgresql/data
    labels:
      - "traefik.enable=false"

  #######################################
  # Imaginary: Image proxy
  #######################################
  imaginary:
    image: h2non/imaginary:latest
    command: -enable-url-source -http-cache-ttl 172800
    environment:
      - MALLOC_ARENA_MAX=2
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
    restart: always
    labels:
      - "traefik.enable=false"

  ########################################
  # API
  ########################################
  api:
    build: .
    image: "ncarlier/readflow:latest"
    restart: always
    depends_on:
      - db
    environment:
      - READFLOW_DB=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-secret}@db/${POSTGRES_DB:-readflow}?sslmode=disable
      - READFLOW_LISTEN_METRICS=:9090
      - READFLOW_IMAGE_PROXY_URL=http://imaginary:9000
    labels:
      - "traefik.http.services.api.loadbalancer.server.port=8080"
      - "traefik.http.routers.api.priority=2"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.routers.api.middlewares=api-stripprefix@docker"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"

  ########################################
  # Webapp
  ########################################
  app:
    build: ./ui/
    image: "ncarlier/readflow-app:latest"
    restart: always
    labels:
      - "traefik.http.services.webapp.loadbalancer.server.port=80"
      - "traefik.http.routers.webapp.priority=1"
      - "traefik.http.routers.webapp.rule=PathPrefix(`/`)"

networks:
  default:

volumes:
  db-data:
